////////////////////////////////////////////////////////////////////////////////////////////////////
//                               This file is part of CosmoScout VR                               //
////////////////////////////////////////////////////////////////////////////////////////////////////

// SPDX-FileCopyrightText: German Aerospace Center (DLR) <cosmoscout@dlr.de>
// SPDX-License-Identifier: MIT

#include "WCSSource.hpp"

#include "../../../../src/cs-utils/filesystem.hpp"

namespace csp::visualquery {

////////////////////////////////////////////////////////////////////////////////////////////////////

const std::string WCSSource::sName = "WCS Source";

////////////////////////////////////////////////////////////////////////////////////////////////////

std::string WCSSource::sSource() {
  return cs::utils::filesystem::loadToString(
      "../share/resources/nodes/csp-visual-query/WCSSource.js");
}

////////////////////////////////////////////////////////////////////////////////////////////////////

std::unique_ptr<WCSSource> WCSSource::sCreate() {
  return std::make_unique<WCSSource>();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

WCSSource::WCSSource() {

}

////////////////////////////////////////////////////////////////////////////////////////////////////

WCSSource::~WCSSource() {
  
}

////////////////////////////////////////////////////////////////////////////////////////////////////

std::string const& WCSSource::getName() const {
  return sName;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void WCSSource::process() {

  // The name of the port must match the name given in the JavaScript code above.
  //writeOutput();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace csp::demonodeeditor
